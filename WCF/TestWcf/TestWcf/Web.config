<?xml version="1.0"?>
<configuration>  
  <system.serviceModel>
    <behaviors>
      <endpointBehaviors>
        <!-- This behavior has a name and is configured for webHttpBinding for CustomService.svc and Service1.svc -->
        <!-- it has asigned a name so it wont actually interact with other endpoints.-->
        <!--  If there is only webHttpBinding defined for all services in web.config then remove the name-->
        <behavior name="webHttpBindingBehavior">
          <!-- we can also use <webHttp/> behavior -->
          <enableWebScript/>
       </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <!-- This behavior is used by CustomService.svc because it does not have any name -->
        <!-- This behavior name must be set like 'behaviorConfiguration=""' in service tag-->
        <!-- If no name is set in behavior tag then it is applied to all unnamed service element-->
        <behavior>
          <!-- To avoid disclosing metadata information, set the values below to false before deployment -->
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="false"/>
          <!-- To receive exception details in faults for debugging purposes, set the value below to true-->
          <!-- Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="true"/>
        </behavior>

        <!-- This behavior is used by Service1.svc because -->
        <!-- service has behaviorConfiguration="MyCustomBehavior" -->
        <behavior name="MyCustomBehavior">
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true"/>
        </behavior>

      </serviceBehaviors>
    </behaviors>

    <bindings>
      <webHttpBinding>
        <binding crossDomainScriptAccessEnabled="true" allowCookies="true"></binding>
      </webHttpBinding>
      <wsHttpBinding>
        <binding allowCookies="true"></binding>
      </wsHttpBinding>
    </bindings>
    <protocolMapping>
      <!--  If endpoint is not defined for the service, it will follow protocolMapping. It has scheme="" value which shows type of binding of the service.-->
      <add binding="webHttpBinding" scheme="http" />
    </protocolMapping>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
    
    
    <services>
      <!-- this service has pre-defined behavior named "MyCustomBehavior" -->
      <service name="TestWcf.Service1" behaviorConfiguration="MyCustomBehavior">
        <endpoint address="" binding="wsHttpBinding" contract="TestWcf.IService1"></endpoint>
        <endpoint address="basic2" binding="webHttpBinding" behaviorConfiguration="webHttpBindingBehavior" contract="TestWcf.IService1"></endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"></endpoint>
      </service>
      <service name="TestWcf.CustomService">
        <endpoint address="" binding="webHttpBinding" contract="TestWcf.ICustomService" behaviorConfiguration="webHttpBindingBehavior"></endpoint>
      </service>
    </services>
    
    
    
  </system.serviceModel>

  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
  </appSettings>
  <system.web>
    <compilation debug="true" targetFramework="4.8" />
    <httpRuntime targetFramework="4.8"/>
  </system.web>
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true"/>
    <!--
        To browse web app root directory during debugging, set the value below to true.
        Set to false before deployment to avoid disclosing web app folder information.
      -->
    <directoryBrowse enabled="true"/>
  </system.webServer>

</configuration>
